import { validateRequest } from "@/auth";
import prisma from "@/lib/prisma";
import { NextRequest, NextResponse } from "next/server";

export async function POST(req: NextRequest) {
  try {
    const { user } = await validateRequest();
    if (!user) {
      throw Error("unathosized");
    }
    const {
      task1,
      task2,
      task3,
      task4,
      task5,
      task6,
      task7,
      task8,
      task9,
      task10,
      task11,
      task12,
      task13,
      task14,
      task15,
      task16,
      task17,
      task18,
      task19,
      task20,

      task21,
      task22,
      task23,
      task24,
      task25,
      task26,
      task27,
      task28,
      task29,
      task30,
      task31,
      task32,
      task33,
      task34,
      task35,
      task36,
      task37,
      task38,
      task39,
      task40,
      task41,
      task42,
      task43,
      task44,
      task45,
      task46,
      task47,
      task48,
      task49,
      task50,
      task51,
      task52,
      task53,
      task54,
      task55,
      task56,
      task57,
      task58,
      task59,
      task60,
      task61,
      task62,
      task63,
      task64,
      task65,
      task66,
      task67,
      task68,
      task69,

      items1,
      items2,
      items3,
      items4,
      items5,
      items6,
      items7,
      items8,
      items9,
      items10,
      items11,
      items12,
      items13,
      items14,
      items15,

      reco1,
      reco2,
      reco3,
      reco4,

      ex1,
      ex2,
      ex3,

      panCard,
      aadharCard,
      marksheet,
      YourPhoto,
      bancksheeding,
      localproff,
      parentAdhar,
    } = await req.json();

    const userDoc = await prisma.uplodthing.findFirst({
      where: {
        userId: user.id,
      },
    });

    if (userDoc) {
      return NextResponse.json({
        success: false,
        message: "You have already uploaded your documents",
      });
    }

    await prisma.uplodthing.create({
      data: {
        userId: user.id,
        task1,
        task2,
        task3,
        task4,
        task5,
        task6,
        task7,
        task8,
        task9,
        task10,
        task11,
        task12,
        task13,
        task14,
        task15,
        task16,
        task17,
        task18,
        task19,
        task20,

        task21,
        task22,
        task23,
        task24,
        task25,
        task26,
        task27,
        task28,
        task29,
        task30,
        task31,
        task32,
        task33,
        task34,
        task35,
        task36,
        task37,
        task38,
        task39,
        task40,
        task41,
        task42,
        task43,
        task44,
        task45,
        task46,
        task47,
        task48,
        task49,
        task50,
        task51,
        task52,
        task53,
        task54,
        task55,
        task56,
        task57,
        task58,
        task59,
        task60,
        task61,
        task62,
        task63,
        task64,
        task65,
        task66,
        task67,
        task68,
        task69,

        items1,
        items2,
        items3,
        items4,
        items5,
        items6,
        items7,
        items8,
        items9,
        items10,
        items11,
        items12,
        items13,
        items14,
        items15,

        reco1,
        reco2,
        reco3,
        reco4,

        ex1,
        ex2,
        ex3,

        panCard: panCard[0],
        aadharCard: aadharCard[0],
        marksheet: marksheet[0],
        YourPhoto: YourPhoto[0],
        bancksheeding: bancksheeding[0],
        localproff: localproff[0],
        parentAdhar: parentAdhar[0],
      },
    });

    return NextResponse.json({
      success: true,
      message: " Documents uploaded successfully",
    });
  } catch (error) {
    return NextResponse.json({
      success: false,
      message: " Interval server error",
    });
  }
}
